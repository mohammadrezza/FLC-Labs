import java_cup.runtime.*;


parser code {:

    public void report_error(String message, Object info) {
        System.err.print("ERROR: Syntax error");
        if (info instanceof Symbol)
            if (((Symbol)info).left != -1){
                int line = (((Symbol)info).left)+1;
                int column = (((Symbol)info).right)+1;
                System.err.print(" (linea "+line+", colonna "+column+"): ");
            } else System.err.print(": ");
        else System.err.print(": ");
    }
:};



// Terminal tokens
terminal INT, DOUBLE, ID;
terminal PRINT, IF, WHILE,  THEN, ELSE;
terminal RO, RC, BO, BC, SC, CM, SO, S;
terminal PLUS, MINUS, STAR, DIV;
terminal MIN, MAJ, MIN_EQ, EQ_MIN, MAJ_EQ, EQ_MAJ, EQ;
terminal AND, OR, NOT;
terminal INT_TYPE, DOUBLE_TYPE;


// Non terminal tokens
non terminal prog , var_decs, var_dec, vl, vtk, id;
non terminal inizs, iniz, var, vt;
non terminal while_exp, while_cond, while_body, sign, side, op;
non terminal if_exp, if_cond, if_body, instrs, instr;
non terminal print_exp;


//////////////////////////////////////
// Grammar start
//////////////////////////////////////

start with prog;

prog ::= var_decs instrs;

//
var_decs ::= var_dec | var_decs var_dec;
var_dec ::= vtk vl S;
vtk ::= INT_TYPE | DOUBLE_TYPE;
vl ::= id | vl CM id; 
id ::= ID | ID SO INT SC;

//
instrs ::= instr | instrs instr;
instr ::= iniz | while_exp | if_exp | print_exp;

//
iniz ::= var EQ vt S;
var ::= ID | ID SO INT SC | ID SO ID SC;
vt ::= INT | DOUBLE | MINUS DOUBLE | var | var op INT;

//
while_exp ::= WHILE RO while_cond RC BO instrs BC;
while_cond ::= side sign side;
sign ::= EQ EQ | MIN | MAJ | MIN_EQ | EQ_MIN | MAJ_EQ | EQ_MAJ; 
side ::= var | INT | DOUBLE | var op var | var op INT | INT op var ;
op ::= PLUS | MINUS;

//
if_exp ::= IF RO if_cond RC BO instrs BC;
if_cond ::= side sign side;

//
print_exp ::= PRINT RO vl RC S;
